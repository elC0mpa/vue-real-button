import{R as a}from"./RealButton.6c699972.js";import{o as p,c as r,a as n,b as t,w as o,d as s,e}from"./app.d6a1f299.js";const l=n("h1",{id:"demo",tabindex:"-1"},[s("Demo "),n("a",{class:"header-anchor",href:"#demo","aria-hidden":"true"},"#")],-1),c=n("h2",{id:"sizes",tabindex:"-1"},[s("Sizes "),n("a",{class:"header-anchor",href:"#sizes","aria-hidden":"true"},"#")],-1),k={class:"buttons-row"},d=s("Small"),i=s("Default"),u=s("Medium"),_=s("Large"),g=e(`<div class="language-js"><pre><code><span class="token operator">&lt;</span>real<span class="token operator">-</span>button size<span class="token operator">=</span><span class="token string">&quot;small&quot;</span><span class="token operator">&gt;</span>Small<span class="token operator">&lt;</span><span class="token operator">/</span>real<span class="token operator">-</span>button<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>real<span class="token operator">-</span>button<span class="token operator">&gt;</span>Default<span class="token operator">&lt;</span><span class="token operator">/</span>real<span class="token operator">-</span>button<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>real<span class="token operator">-</span>button size<span class="token operator">=</span><span class="token string">&quot;medium&quot;</span><span class="token operator">&gt;</span>Medium<span class="token operator">&lt;</span><span class="token operator">/</span>real<span class="token operator">-</span>button<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>real<span class="token operator">-</span>button size<span class="token operator">=</span><span class="token string">&quot;large&quot;</span><span class="token operator">&gt;</span>Large<span class="token operator">&lt;</span><span class="token operator">/</span>real<span class="token operator">-</span>button<span class="token operator">&gt;</span>
</code></pre></div><h2 id="rounded-and-bold" tabindex="-1">Rounded and bold <a class="header-anchor" href="#rounded-and-bold" aria-hidden="true">#</a></h2>`,2),h={class:"buttons-row"},b=s("Default"),f=s("Bold"),y=s("Rounded"),q=s("Bold"),m=e(`<div class="language-js"><pre><code><span class="token operator">&lt;</span>real<span class="token operator">-</span>button<span class="token operator">&gt;</span>Default<span class="token operator">&lt;</span><span class="token operator">/</span>real<span class="token operator">-</span>button<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>real<span class="token operator">-</span>button bold<span class="token operator">&gt;</span>Bold<span class="token operator">&lt;</span><span class="token operator">/</span>real<span class="token operator">-</span>button<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>real<span class="token operator">-</span>button rounded<span class="token operator">&gt;</span>Rounded<span class="token operator">&lt;</span><span class="token operator">/</span>real<span class="token operator">-</span>button<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>real<span class="token operator">-</span>button bold rounded<span class="token operator">&gt;</span>Bold<span class="token operator">&lt;</span><span class="token operator">/</span>real<span class="token operator">-</span>button<span class="token operator">&gt;</span>
</code></pre></div><h2 id="types" tabindex="-1">Types <a class="header-anchor" href="#types" aria-hidden="true">#</a></h2>`,2),T={class:"buttons-row"},v=s("Default"),S=s("Link"),D=s("Info"),C=s("Success"),I=s("Warning"),w=s("Danger"),x=s("Link"),A=s("Info"),V=s("Success"),z=s("Warning"),R=s("Danger"),N=s("Light"),P=s("Dark"),B=e(`<div class="language-js"><pre><code><span class="token operator">&lt;</span>real<span class="token operator">-</span>button<span class="token operator">&gt;</span>Default<span class="token operator">&lt;</span><span class="token operator">/</span>real<span class="token operator">-</span>button<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>real<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">&quot;link&quot;</span><span class="token operator">&gt;</span>Link<span class="token operator">&lt;</span><span class="token operator">/</span>real<span class="token operator">-</span>button<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>real<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">&quot;info&quot;</span><span class="token operator">&gt;</span>Info<span class="token operator">&lt;</span><span class="token operator">/</span>real<span class="token operator">-</span>button<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>real<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">&quot;success&quot;</span><span class="token operator">&gt;</span>Success<span class="token operator">&lt;</span><span class="token operator">/</span>real<span class="token operator">-</span>button<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>real<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">&quot;warning&quot;</span><span class="token operator">&gt;</span>Warning<span class="token operator">&lt;</span><span class="token operator">/</span>real<span class="token operator">-</span>button<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>real<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">&quot;danger&quot;</span><span class="token operator">&gt;</span>Danger<span class="token operator">&lt;</span><span class="token operator">/</span>real<span class="token operator">-</span>button<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>real<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">&quot;link-light&quot;</span><span class="token operator">&gt;</span>Link<span class="token operator">&lt;</span><span class="token operator">/</span>real<span class="token operator">-</span>button<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>real<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">&quot;info-light&quot;</span><span class="token operator">&gt;</span>Info<span class="token operator">&lt;</span><span class="token operator">/</span>real<span class="token operator">-</span>button<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>real<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">&quot;success-light&quot;</span><span class="token operator">&gt;</span>Success<span class="token operator">&lt;</span><span class="token operator">/</span>real<span class="token operator">-</span>button<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>real<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">&quot;warning-light&quot;</span><span class="token operator">&gt;</span>Warning<span class="token operator">&lt;</span><span class="token operator">/</span>real<span class="token operator">-</span>button<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>real<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">&quot;danger-light&quot;</span><span class="token operator">&gt;</span>Danger<span class="token operator">&lt;</span><span class="token operator">/</span>real<span class="token operator">-</span>button<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>real<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">&quot;light&quot;</span><span class="token operator">&gt;</span>Light<span class="token operator">&lt;</span><span class="token operator">/</span>real<span class="token operator">-</span>button<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>real<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">&quot;dark&quot;</span><span class="token operator">&gt;</span>Dark<span class="token operator">&lt;</span><span class="token operator">/</span>real<span class="token operator">-</span>button<span class="token operator">&gt;</span>
</code></pre></div><h2 id="custom-styles" tabindex="-1">Custom styles <a class="header-anchor" href="#custom-styles" aria-hidden="true">#</a></h2><div class="info custom-block"><p class="custom-block-title">INFO</p><p>These styles will only be applied if there is no <strong>type</strong> property provided.</p></div>`,3),L={class:"buttons-row"},j=s("Custom"),E=s("Custom"),W=e(`<div class="language-js"><pre><code><span class="token operator">&lt;</span>real<span class="token operator">-</span>button button<span class="token operator">-</span>color<span class="token operator">=</span><span class="token string">&quot;red&quot;</span> edge<span class="token operator">-</span>color<span class="token operator">=</span><span class="token string">&quot;black&quot;</span><span class="token operator">&gt;</span>Custom<span class="token operator">&lt;</span><span class="token operator">/</span>real<span class="token operator">-</span>button<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>real<span class="token operator">-</span>button button<span class="token operator">-</span>color<span class="token operator">=</span><span class="token string">&quot;violet&quot;</span> edge<span class="token operator">-</span>color<span class="token operator">=</span><span class="token string">&quot;linear-gradient(to left, black 0%, indigo 8%, indigo 92%, black 100%);&quot;</span><span class="token operator">&gt;</span>Custom<span class="token operator">&lt;</span><span class="token operator">/</span>real<span class="token operator">-</span>button<span class="token operator">&gt;</span>
</code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Notice how in order to give a real aspect, <strong>edge color should be defined as a linear gradient</strong></p></div>`,2),K='{"title":"Demo","description":"","frontmatter":{},"headers":[{"level":2,"title":"Sizes","slug":"sizes"},{"level":2,"title":"Rounded and bold","slug":"rounded-and-bold"},{"level":2,"title":"Types","slug":"types"},{"level":2,"title":"Custom styles","slug":"custom-styles"}],"relativePath":"demo/index.md","lastUpdated":1634524576137}',M={};function O(F){return(U,G)=>(p(),r("div",null,[l,c,n("div",k,[t(a,{size:"small"},{default:o(()=>[d]),_:1}),t(a,null,{default:o(()=>[i]),_:1}),t(a,{size:"medium"},{default:o(()=>[u]),_:1}),t(a,{size:"large"},{default:o(()=>[_]),_:1})]),g,n("div",h,[t(a,null,{default:o(()=>[b]),_:1}),t(a,{bold:""},{default:o(()=>[f]),_:1}),t(a,{rounded:""},{default:o(()=>[y]),_:1}),t(a,{bold:"",rounded:""},{default:o(()=>[q]),_:1})]),m,n("div",T,[t(a,null,{default:o(()=>[v]),_:1}),t(a,{type:"link"},{default:o(()=>[S]),_:1}),t(a,{type:"info"},{default:o(()=>[D]),_:1}),t(a,{type:"success"},{default:o(()=>[C]),_:1}),t(a,{type:"warning"},{default:o(()=>[I]),_:1}),t(a,{type:"danger"},{default:o(()=>[w]),_:1}),t(a,{type:"link-light"},{default:o(()=>[x]),_:1}),t(a,{type:"info-light"},{default:o(()=>[A]),_:1}),t(a,{type:"success-light"},{default:o(()=>[V]),_:1}),t(a,{type:"warning-light"},{default:o(()=>[z]),_:1}),t(a,{type:"danger-light"},{default:o(()=>[R]),_:1}),t(a,{type:"light"},{default:o(()=>[N]),_:1}),t(a,{type:"dark"},{default:o(()=>[P]),_:1})]),B,n("div",L,[t(a,{"button-color":"red","edge-color":"black"},{default:o(()=>[j]),_:1}),t(a,{"button-color":"violet","edge-color":"linear-gradient(to left, black 0%, indigo 8%, indigo 92%, black 100%);"},{default:o(()=>[E]),_:1})]),W]))}const Q=Object.assign(M,{setup:O});export{K as __pageData,Q as default};
